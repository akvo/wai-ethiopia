#+STARTUP: hideall indent hidestars hideblocks


#+BEGIN_HTML

<style type='text/css'>

h2 { background: gold; padding:20px;}
h3 { background: yellow; padding: 8px; }
pre { background: #333; color: #fff; font-family:bitstream; }
</style>

#+END_HTML

* Paths

** Route /health-check

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Dev"
    ],
    "summary": "Health Check",
    "operationId": "health_check_health_check_get",
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": null
          }
        }
      }
    }
  }
]
#+END_SRC


** Route /

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Dev"
    ],
    "summary": "Read Main",
    "operationId": "read_main__get",
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": null
          }
        }
      }
    }
  }
]
#+END_SRC


** Route /config.js

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Config"
    ],
    "summary": "Config.Js",
    "description": "static javascript config",
    "operationId": "config_js_config_js_get",
    "responses": {
      "200": {
        "description": "Successful Response"
      }
    }
  }
]
#+END_SRC


** Route /hint/{question_id}

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Dev"
    ],
    "summary": "get hint for requested question",
    "operationId": "hint_get_hint__question_id__get",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Question Id",
          "type": "integer"
        },
        "name": "question_id",
        "in": "path"
      }
    ],
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HintResponse"
            }
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    }
  }
]
#+END_SRC


** Route /log/{id}

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Log"
    ],
    "summary": "get all log",
    "operationId": "log_status_log__id__get",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Id",
          "type": "integer"
        },
        "name": "id",
        "in": "path"
      }
    ],
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/LogDict"
            }
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


** Route /log

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Log"
    ],
    "summary": "get all log",
    "operationId": "log_status_log_get",
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "Response Log Status Log Get",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/LogDict"
              }
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


** Route /project/{id}

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Custom"
    ],
    "summary": "get project by id",
    "operationId": "project_get_by_id_project__id__get",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Id",
          "type": "integer"
        },
        "name": "id",
        "in": "path"
      }
    ],
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "Response Project Get By Id Project  Id  Get",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ProjectBase"
              }
            }
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    }
  }
]
#+END_SRC


** Route /download/status

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "File"
    ],
    "summary": "list of generated data",
    "operationId": "excel_data_download_status_download_status_get",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Id",
          "type": "integer"
        },
        "name": "id",
        "in": "query"
      }
    ],
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/JobsBase"
            }
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


** Route /download/list

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "File"
    ],
    "summary": "list of generated data",
    "operationId": "excel_data_download_list_download_list_get",
    "parameters": [
      {
        "required": false,
        "schema": {
          "title": "Page",
          "type": "integer",
          "default": 1
        },
        "name": "page",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Perpage",
          "type": "integer",
          "default": 5
        },
        "name": "perpage",
        "in": "query"
      }
    ],
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "Response Excel Data Download List Download List Get",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/JobsBase"
              }
            }
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


** Route /download/data

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "File"
    ],
    "summary": "download data",
    "operationId": "excel_data_generate_download_data_get",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Form Id",
          "type": "integer"
        },
        "name": "form_id",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Administration",
          "type": "integer"
        },
        "name": "administration",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Q",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": "q",
        "in": "query"
      }
    ],
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/JobsBase"
            }
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


** Route /download/file/{file_name}

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "File"
    ],
    "summary": "get excel template for ",
    "operationId": "excel_data_download_download_file__file_name__get",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "File Name",
          "type": "string"
        },
        "name": "file_name",
        "in": "path"
      }
    ],
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": null
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


** Route /excel-template/{form_id}/{administration}

*** POST

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "File"
    ],
    "summary": "post excel file",
    "operationId": "excel_template_post_excel_template__form_id___administration__post",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Form Id",
          "type": "integer"
        },
        "name": "form_id",
        "in": "path"
      },
      {
        "required": true,
        "schema": {
          "title": "Administration",
          "type": "integer"
        },
        "name": "administration",
        "in": "path"
      }
    ],
    "requestBody": {
      "content": {
        "multipart/form-data": {
          "schema": {
            "$ref": "#/components/schemas/Body_excel_template_post_excel_template__form_id___administration__post"
          }
        }
      },
      "required": true
    },
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/JobsBase"
            }
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


** Route /excel-template/{form_id}

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "File"
    ],
    "summary": "get excel template for ",
    "operationId": "excel_template_get_by_form_id_excel_template__form_id__get",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Form Id",
          "type": "integer"
        },
        "name": "form_id",
        "in": "path"
      }
    ],
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": null
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


** Route /chart/{name}

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Charts"
    ],
    "summary": "get chart by name",
    "operationId": "charts_get_by_name_chart__name__get",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Name",
          "type": "string"
        },
        "name": "name",
        "in": "path"
      }
    ],
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": null
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    }
  }
]
#+END_SRC


** Route /chart/overviews/{form_id}/{question_id}/{option}

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Charts"
    ],
    "summary": "get overviews chart and info data",
    "operationId": "charts_get_overviews_chart_and_info_chart_overviews__form_id___question_id___option__get",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Form Id",
          "type": "integer"
        },
        "name": "form_id",
        "in": "path"
      },
      {
        "required": true,
        "schema": {
          "title": "Question Id",
          "type": "integer"
        },
        "name": "question_id",
        "in": "path"
      },
      {
        "required": true,
        "schema": {
          "title": "Option",
          "type": "string"
        },
        "name": "option",
        "in": "path"
      }
    ],
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": null
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    }
  }
]
#+END_SRC


** Route /chart/jmp-data/{form_id}/{question_id}

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Charts"
    ],
    "summary": "get jmp chart aggregate data",
    "operationId": "charts_get_aggregated_jmp_chart_data_chart_jmp_data__form_id___question_id__get",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Form Id",
          "type": "integer"
        },
        "name": "form_id",
        "in": "path"
      },
      {
        "required": true,
        "schema": {
          "title": "Question Id",
          "type": "integer"
        },
        "name": "question_id",
        "in": "path"
      },
      {
        "required": false,
        "schema": {
          "title": "Administration",
          "type": "integer"
        },
        "name": "administration",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Q",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": "q",
        "in": "query"
      }
    ],
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": null
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    }
  }
]
#+END_SRC


** Route /chart/pie-data/{form_id}/{question_id}

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Charts"
    ],
    "summary": "get pie chart aggregate data",
    "operationId": "charts_get_aggregated_pie_chart_data_chart_pie_data__form_id___question_id__get",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Form Id",
          "type": "integer"
        },
        "name": "form_id",
        "in": "path"
      },
      {
        "required": true,
        "schema": {
          "title": "Question Id",
          "type": "integer"
        },
        "name": "question_id",
        "in": "path"
      },
      {
        "required": false,
        "schema": {
          "title": "Administration",
          "type": "integer"
        },
        "name": "administration",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Q",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": "q",
        "in": "query"
      }
    ],
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": null
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    }
  }
]
#+END_SRC


** Route /chart/data/{form_id}

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Charts"
    ],
    "summary": "get chart aggregate data",
    "operationId": "charts_get_aggregated_chart_data_chart_data__form_id__get",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Form Id",
          "type": "integer"
        },
        "name": "form_id",
        "in": "path"
      },
      {
        "required": true,
        "schema": {
          "title": "Question",
          "type": "integer"
        },
        "name": "question",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Stack",
          "type": "integer"
        },
        "name": "stack",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Administration",
          "type": "integer"
        },
        "name": "administration",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Q",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": "q",
        "in": "query"
      }
    ],
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": null
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    }
  }
]
#+END_SRC


** Route /chart/

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Charts"
    ],
    "summary": "get chart list",
    "operationId": "charts_get_chart__get",
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": null
          }
        }
      }
    }
  }
]
#+END_SRC


** Route /maps/{form_id}

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Maps"
    ],
    "summary": "get maps data by form id",
    "operationId": "maps_get_maps__form_id__get",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Form Id",
          "type": "integer"
        },
        "name": "form_id",
        "in": "path"
      },
      {
        "required": true,
        "schema": {
          "title": "Shape",
          "type": "integer"
        },
        "name": "shape",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Marker",
          "type": "integer"
        },
        "name": "marker",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Hover Ids",
          "type": "string"
        },
        "name": "hover_ids",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Q",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": "q",
        "in": "query"
      }
    ],
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "Response Maps Get Maps  Form Id  Get",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/MapsDict"
              }
            }
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    }
  }
]
#+END_SRC


** Route /history/{data_id}/{question_id}

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Data"
    ],
    "summary": "get answer with it's history",
    "operationId": "data_history_history__data_id___question_id__get",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Data Id",
          "type": "integer"
        },
        "name": "data_id",
        "in": "path"
      },
      {
        "required": true,
        "schema": {
          "title": "Question Id",
          "type": "integer"
        },
        "name": "question_id",
        "in": "path"
      }
    ],
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": null
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


** Route /last-submitted

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Data"
    ],
    "summary": "get last submission",
    "operationId": "data_last_submitted_last_submitted_get",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Form Id",
          "type": "integer"
        },
        "name": "form_id",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Administration",
          "type": "integer"
        },
        "name": "administration",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Q",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": "q",
        "in": "query"
      }
    ],
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SubmissionInfo"
            }
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    }
  }
]
#+END_SRC


** Route /data

*** DELETE

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Data"
    ],
    "summary": "bulk delete data",
    "operationId": "data_bulk_delete_data_delete",
    "parameters": [
      {
        "required": false,
        "schema": {
          "title": "Id",
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "name": "id",
        "in": "query"
      }
    ],
    "responses": {
      "204": {
        "description": "Successful Response"
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


** Route /data/{id}

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Data"
    ],
    "summary": "get data by id",
    "operationId": "data_get_by_id_data__id__get",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Id",
          "type": "integer"
        },
        "name": "id",
        "in": "path"
      }
    ],
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DataDict"
            }
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


*** PUT

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Data"
    ],
    "summary": "update data",
    "operationId": "data_update_data__id__put",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Id",
          "type": "integer"
        },
        "name": "id",
        "in": "path"
      }
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "title": "Answers",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnswerDict"
            }
          }
        }
      },
      "required": true
    },
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DataDict"
            }
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


*** DELETE

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Data"
    ],
    "summary": "delete data",
    "operationId": "data_delete_data__id__delete",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Id",
          "type": "integer"
        },
        "name": "id",
        "in": "path"
      }
    ],
    "responses": {
      "204": {
        "description": "Successful Response"
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


** Route /data/form/{form_id}

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Data"
    ],
    "summary": "get all datas",
    "operationId": "data_get_data_form__form_id__get",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Form Id",
          "type": "integer"
        },
        "name": "form_id",
        "in": "path"
      },
      {
        "required": false,
        "schema": {
          "title": "Page",
          "type": "integer",
          "default": 1
        },
        "name": "page",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Perpage",
          "type": "integer",
          "default": 10
        },
        "name": "perpage",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Administration",
          "type": "integer"
        },
        "name": "administration",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Question",
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "name": "question",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Q",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": "q",
        "in": "query"
      }
    ],
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DataResponse"
            }
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


*** POST

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Data"
    ],
    "summary": "add new data",
    "operationId": "data_create_data_form__form_id__post",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Form Id",
          "type": "integer"
        },
        "name": "form_id",
        "in": "path"
      }
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "title": "Answers",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnswerDict"
            }
          }
        }
      },
      "required": true
    },
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/DataDict"
            }
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


** Route /option/{id}

*** PUT

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Option"
    ],
    "summary": "update option",
    "operationId": "option_update_option__id__put",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Id",
          "type": "integer"
        },
        "name": "id",
        "in": "path"
      },
      {
        "required": false,
        "schema": {
          "title": "Name",
          "type": "string"
        },
        "name": "name",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Order",
          "type": "string"
        },
        "name": "order",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Color",
          "type": "string"
        },
        "name": "color",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Score",
          "type": "string"
        },
        "name": "score",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Code",
          "type": "string"
        },
        "name": "code",
        "in": "query"
      }
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "title": "Translations",
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OptionBaseWithId"
            }
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


** Route /option/

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Option"
    ],
    "summary": "get all options",
    "operationId": "option_get_option__get",
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "Response Option Get Option  Get",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/OptionBaseWithId"
              }
            }
          }
        }
      }
    }
  }
]
#+END_SRC


*** POST

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Option"
    ],
    "summary": "Add new option",
    "operationId": "option_post_option__post",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Question Id",
          "type": "integer"
        },
        "name": "question_id",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Name",
          "type": "string"
        },
        "name": "name",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Order",
          "type": "string"
        },
        "name": "order",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Color",
          "type": "string"
        },
        "name": "color",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Score",
          "type": "string"
        },
        "name": "score",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Code",
          "type": "string"
        },
        "name": "code",
        "in": "query"
      }
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "title": "Translations",
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OptionBaseWithId"
            }
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


** Route /question/

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Form"
    ],
    "summary": "get all questions",
    "operationId": "get_question__get",
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "Response Get Question  Get",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/QuestionDict"
              }
            }
          }
        }
      }
    }
  }
]
#+END_SRC


*** POST

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Form"
    ],
    "summary": "add new question",
    "operationId": "question_create_question__post",
    "parameters": [
      {
        "description": "question text",
        "required": false,
        "schema": {
          "title": "Name",
          "type": "string",
          "description": "question text"
        },
        "name": "name",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Order",
          "type": "integer"
        },
        "name": "order",
        "in": "query"
      },
      {
        "description": "question type",
        "required": false,
        "schema": {
          "allOf": [
            {
              "$ref": "#/components/schemas/QuestionType"
            }
          ],
          "description": "question type",
          "default": "text"
        },
        "name": "type",
        "in": "query"
      },
      {
        "description": "Wether question is metadata or not",
        "required": false,
        "schema": {
          "title": "Meta",
          "type": "boolean",
          "description": "Wether question is metadata or not",
          "default": false
        },
        "name": "meta",
        "in": "query"
      },
      {
        "description": "Wether question is required or not",
        "required": false,
        "schema": {
          "title": "Required",
          "type": "boolean",
          "description": "Wether question is required or not",
          "default": true
        },
        "name": "required",
        "in": "query"
      },
      {
        "description": "Minimum number for number question type, default: 0",
        "required": false,
        "schema": {
          "title": "Min",
          "type": "integer",
          "description": "Minimum number for number question type, default: 0",
          "default": 0
        },
        "name": "min",
        "in": "query"
      },
      {
        "description": "Max number for number question type",
        "required": false,
        "schema": {
          "title": "Max",
          "type": "integer",
          "description": "Max number for number question type"
        },
        "name": "max",
        "in": "query"
      },
      {
        "description": "Existing form id, create if you don't have one",
        "required": false,
        "schema": {
          "title": "Form",
          "type": "integer",
          "description": "Existing form id, create if you don't have one"
        },
        "name": "form",
        "in": "query"
      },
      {
        "description": "Name of Question Group, Append or Create",
        "required": false,
        "schema": {
          "title": "Question Group",
          "type": "string",
          "description": "Name of Question Group, Append or Create"
        },
        "name": "question_group",
        "in": "query"
      }
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/Body_question_create_question__post"
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/QuestionBase"
            }
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


** Route /webform/

*** POST

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Form"
    ],
    "summary": "post webform editor JSON value",
    "operationId": "webform_create_webform__post",
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "title": "Payload",
            "type": "object"
          }
        }
      },
      "required": true
    },
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": null
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


** Route /webform/{id}

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Form"
    ],
    "summary": "get form by id",
    "operationId": "webform_get_by_id_webform__id__get",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Id",
          "type": "integer"
        },
        "name": "id",
        "in": "path"
      },
      {
        "required": false,
        "schema": {
          "title": "Edit",
          "type": "boolean",
          "default": false
        },
        "name": "edit",
        "in": "query"
      }
    ],
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": null
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


*** PUT

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Form"
    ],
    "summary": "update webform editor definition",
    "operationId": "webform_update_webform__id__put",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Id",
          "type": "integer"
        },
        "name": "id",
        "in": "path"
      }
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "title": "Payload",
            "type": "object"
          }
        }
      },
      "required": true
    },
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": null
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


** Route /form/{id}

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Form"
    ],
    "summary": "get form by id",
    "operationId": "form_get_by_id_form__id__get",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Id",
          "type": "integer"
        },
        "name": "id",
        "in": "path"
      }
    ],
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/FormBase"
            }
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    }
  }
]
#+END_SRC


** Route /form/

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Form"
    ],
    "summary": "get all forms",
    "operationId": "get_form__get",
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "Response Get Form  Get",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FormDict"
              }
            }
          }
        }
      }
    }
  }
]
#+END_SRC


*** POST

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Form"
    ],
    "summary": "add new form",
    "operationId": "form_create_form__post",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Name",
          "type": "string"
        },
        "name": "name",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Description",
          "type": "string"
        },
        "name": "description",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Default Language",
          "type": "string"
        },
        "name": "default_language",
        "in": "query"
      }
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/components/schemas/Body_form_create_form__post"
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/FormDict"
            }
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


** Route /user/{id}

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "User"
    ],
    "summary": "get user detail",
    "operationId": "user_get_by_id_user__id__get",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Id",
          "type": "integer"
        },
        "name": "id",
        "in": "path"
      }
    ],
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UserAccessBase"
            }
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


*** PUT

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "User"
    ],
    "summary": "Update user",
    "operationId": "user_update_user__id__put",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Id",
          "type": "integer"
        },
        "name": "id",
        "in": "path"
      },
      {
        "required": true,
        "schema": {
          "title": "Active",
          "type": "boolean"
        },
        "name": "active",
        "in": "query"
      },
      {
        "required": true,
        "schema": {
          "$ref": "#/components/schemas/UserRole"
        },
        "name": "role",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "First Name",
          "type": "string",
          "default": ""
        },
        "name": "first_name",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Last Name",
          "type": "string",
          "default": ""
        },
        "name": "last_name",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Organisation",
          "type": "integer"
        },
        "name": "organisation",
        "in": "query"
      }
    ],
    "requestBody": {
      "content": {
        "application/json": {
          "schema": {
            "title": "Access",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "default": []
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UserAccessBase"
            }
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


*** DELETE

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "User"
    ],
    "summary": "delete non admin user by id",
    "operationId": "user_delete_user__id__delete",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Id",
          "type": "integer"
        },
        "name": "id",
        "in": "path"
      }
    ],
    "responses": {
      "204": {
        "description": "Successful Response"
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


** Route /user

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "User"
    ],
    "summary": "get all users",
    "operationId": "user_get_user_get",
    "parameters": [
      {
        "required": false,
        "schema": {
          "title": "Active",
          "type": "integer",
          "default": 0
        },
        "name": "active",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Page",
          "type": "integer",
          "default": 1
        },
        "name": "page",
        "in": "query"
      }
    ],
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UserResponse"
            }
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


*** POST

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "User"
    ],
    "summary": "register new user",
    "operationId": "user_register_user_post",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Organisation",
          "type": "integer"
        },
        "name": "organisation",
        "in": "query"
      },
      {
        "required": true,
        "schema": {
          "title": "First Name",
          "type": "string"
        },
        "name": "first_name",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "title": "Last Name",
          "type": "string",
          "default": ""
        },
        "name": "last_name",
        "in": "query"
      }
    ],
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UserBase"
            }
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


** Route /user/me

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "User"
    ],
    "summary": "get account information",
    "operationId": "user_me_user_me_get",
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/UserAccessBase"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


** Route /organisation/{id}

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Organisation"
    ],
    "summary": "get organisation by id",
    "operationId": "get_by_id_organisation__id__get",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Id",
          "type": "integer"
        },
        "name": "id",
        "in": "path"
      }
    ],
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OrganisationDict"
            }
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    }
  }
]
#+END_SRC


*** PUT

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Organisation"
    ],
    "summary": "Update organisation by id",
    "operationId": "update_organisation__id__put",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Id",
          "type": "integer"
        },
        "name": "id",
        "in": "path"
      },
      {
        "required": false,
        "schema": {
          "title": "Name",
          "type": "string"
        },
        "name": "name",
        "in": "query"
      },
      {
        "required": false,
        "schema": {
          "$ref": "#/components/schemas/OrganisationType"
        },
        "name": "type",
        "in": "query"
      }
    ],
    "responses": {
      "204": {
        "description": "Successful Response"
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    },
    "security": [
      {
        "HTTPBearer": []
      }
    ]
  }
]
#+END_SRC


** Route /organisation

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Organisation"
    ],
    "summary": "get all organisations",
    "operationId": "get_organisation_get",
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "Response Get Organisation Get",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/OrganisationBase"
              }
            }
          }
        }
      }
    }
  }
]
#+END_SRC


** Route /administration-simple

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Administration"
    ],
    "summary": "get simplified administration data",
    "operationId": "get_all_with_parent_name_administration_simple_get",
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": null
          }
        }
      }
    }
  }
]
#+END_SRC


** Route /administration-boundary

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Administration"
    ],
    "summary": "get nested id's list of parent administration",
    "operationId": "get_all_ids_administration_boundary_get",
    "parameters": [
      {
        "required": false,
        "schema": {
          "title": "Id",
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "name": "id",
        "in": "query"
      }
    ],
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": null
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    }
  }
]
#+END_SRC


** Route /administration/{id}

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Administration"
    ],
    "summary": "get administration by id",
    "operationId": "get_by_id_administration__id__get",
    "parameters": [
      {
        "required": true,
        "schema": {
          "title": "Id",
          "type": "integer"
        },
        "name": "id",
        "in": "path"
      }
    ],
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AdministrationResponse"
            }
          }
        }
      },
      "422": {
        "description": "Validation Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/HTTPValidationError"
            }
          }
        }
      }
    }
  }
]
#+END_SRC


** Route /administration

*** GET

#+BEGIN_SRC javascript
[
  {
    "tags": [
      "Administration"
    ],
    "summary": "get all administrations",
    "operationId": "administration_get_administration_get",
    "responses": {
      "200": {
        "description": "Successful Response",
        "content": {
          "application/json": {
            "schema": {
              "title": "Response Administration Get Administration Get",
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/AdministrationBase"
              }
            }
          }
        }
      }
    }
  }
]
#+END_SRC


* Definitions
