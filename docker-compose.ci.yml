---
version: '3.9'
services:
  backend:
    command: ["sh", "run.sh"]
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://wai:password@db:5432/wai_ethiopia
      - SKIP_MIGRATION=yes
      - MAILJET_SECRET=notset
      - MAILJET_APIKEY=notset
      - WEBDOMAIN=notset
      - AUTH0_DOMAIN
      - AUTH0_CLIENT_ID
      - AUTH0_SECRET
      - AUTH0_AUDIENCE
    image: eu.gcr.io/akvo-lumen/wai-sdg-portal/backend:latest
    network_mode: service:mainnetwork
    restart: always
    volumes:
      - ./backend:/app:delegated
    working_dir: /app
  worker:
    command: ["sh", "run-worker.sh"]
    depends_on:
      - db
      - backend
    environment:
      - DATABASE_URL=postgresql://wai:password@db:5432/wai_ethiopia
      - SKIP_MIGRATION=yes
      - MAILJET_SECRET=notset
      - MAILJET_APIKEY=notset
      - WEBDOMAIN=notset
      - AUTH0_DOMAIN
      - AUTH0_CLIENT_ID
      - AUTH0_SECRET
      - AUTH0_AUDIENCE
    image: eu.gcr.io/akvo-lumen/wai-sdg-portal/worker:latest
    network_mode: service:mainnetwork
    restart: always
    volumes:
      - ./backend:/app:delegated
    working_dir: /app
  ci:
    depends_on:
      - backend
      - worker
      - db
      - frontend
    entrypoint: ./entrypoint.sh
    image: alpine:3.14
    network_mode: service:mainnetwork
    volumes:
      - ./ci/test:/test:ro
    working_dir: /test
  db:
    command: postgres -c 'shared_buffers=128MB' -c 'fsync=off' -c 'synchronous_commit=off'
      -c 'full_page_writes=off' -c 'max_connections=100' -c 'bgwriter_lru_maxpages=0'
      -c 'client_min_messages=warning'
    environment:
      - POSTGRES_PASSWORD=password
    image: postgres:12-alpine
    ports:
      - 5432:5432
    restart: always
    volumes:
      - ./db/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
      - pg-data:/var/lib/postgresql/data
      - ./db/script:/script:ro
  frontend:
    command: ["nginx", "-g", "daemon off;"]
    depends_on:
      - backend
      - worker
      - db
    image: eu.gcr.io/akvo-lumen/wai-sdg-portal/frontend:latest
    network_mode: service:mainnetwork
    volumes:
      - ./frontend:/app:delegated
    working_dir: /app
  mainnetwork:
    image: alpine:3.14.0
    command: ["tail", "-f", "/dev/null"]
    ports:
      - 3000:3000
      - 5000:5000
      - 5001:5001
volumes:
  pg-data: {}
