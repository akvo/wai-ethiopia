---
version: "3.9"
services:
  mainnetwork:
    ports:
      - 3000:3000
      - 5000:5000
      - 5001:5001
  db:
    command: "postgres -c 'shared_buffers=128MB' -c 'fsync=off' -c 'synchronous_commit=off' -c 'full_page_writes=off' -c 'max_connections=100' -c 'bgwriter_lru_maxpages=0' -c 'client_min_messages=warning'"
    restart: always
  frontend:
    image: eu.gcr.io/akvo-lumen/wai-ethiopia/frontend:latest
    command: ["nginx", "-g", "daemon off;"]
    depends_on:
      - backend
      - db
  backend:
    network_mode: service:mainnetwork
    image: eu.gcr.io/akvo-lumen/wai-ethiopia/backend:latest
    command: ["sh", "run.sh"]
    environment:
      - DATABASE_URL=postgresql://wai:password@db:5432/wai_ethiopia
      - SKIP_MIGRATION=yes
      - AUTH0_DOMAIN
      - AUTH0_CLIENT_ID
      - AUTH0_SECRET
      - AUTH0_AUDIENCE
    depends_on:
      - db
    restart: always
  worker:
    network_mode: service:mainnetwork
    image: eu.gcr.io/akvo-lumen/wai-ethiopia/worker:latest
    command: ["sh", "worker.sh"]
    environment:
      - DATABASE_URL=postgresql://wai:password@db:5432/wai_ethiopia
    depends_on:
      - db
      - backend
    restart: always
  ci:
    network_mode: service:mainnetwork
    image: alpine:3.14
    volumes:
      - ./ci/test:/test:ro
    working_dir: /test
    entrypoint: ./entrypoint.sh
    depends_on:
      - frontend
      - backend
      - db
